{
	"info": {
		"_postman_id": "27b0ef49-6e66-42f8-8788-550fed6e6745",
		"name": "Telros App tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26544155"
	},
	"item": [
		{
			"name": "Авторизация администратора",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "admin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление нового пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Пользователь должен содержать поля: id, surname, name, patronymic, birthdate, email, telNumber\", function () {",
							"pm.expect(target).to.have.property('id');",
							"pm.expect(target).to.have.property('surname');",
							"pm.expect(target).to.have.property('name');",
							"pm.expect(target).to.have.property('patronymic');",
							"pm.expect(target).to.have.property('birthdate');",
							"pm.expect(target).to.have.property('email');",
							"pm.expect(target).to.have.property('telNumber');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"surname\": \"Popov\",\n\"name\": \"Dmitry\",\n\"patronymic\": \"Olegovic\",\n\"birthdate\": \"1993-03-03\",\n\"email\": \"dmi@gmail.com\",\n\"telNumber\": 88002000600\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление нового пользователя 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Пользователь должен содержать поля: id, surname, name, patronymic, birthdate, email, telNumber\", function () {",
							"pm.expect(target).to.have.property('id');",
							"pm.expect(target).to.have.property('surname');",
							"pm.expect(target).to.have.property('name');",
							"pm.expect(target).to.have.property('patronymic');",
							"pm.expect(target).to.have.property('birthdate');",
							"pm.expect(target).to.have.property('email');",
							"pm.expect(target).to.have.property('telNumber');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"surname\": \"Kokorin\",\n\"name\": \"Denis\",\n\"patronymic\": \"Denisovich\",\n\"birthdate\": \"1996-12-11\",\n\"email\": \"denis@gmail.com\",\n\"telNumber\": 89699693454\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление фото к карточке пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "photo",
							"type": "file",
							"src": "/Users/dmitreevalerko/Desktop/IMG_2670.jpeg"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/admin/users/:userId/photo?photo",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users",
						":userId",
						"photo"
					],
					"query": [
						{
							"key": "photo",
							"value": null
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "2",
							"description": "user id2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменение данных пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Пользователь должен содержать поля: id, surname, name, patronymic, birthdate, email, telNumber\", function () {",
							"pm.expect(target).to.have.property('id');",
							"pm.expect(target).to.have.property('surname');",
							"pm.expect(target).to.have.property('name');",
							"pm.expect(target).to.have.property('patronymic');",
							"pm.expect(target).to.have.property('birthdate');",
							"pm.expect(target).to.have.property('email');",
							"pm.expect(target).to.have.property('telNumber');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"surname\": \"Popov\",\n\"name\": \"Dmitry\",\n\"patronymic\": \"Olegovich\",\n\"birthdate\": \"1993-03-03\",\n\"email\": \"dmi@gmail.com\",\n\"telNumber\": 89112277812\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users/:userId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1",
							"description": "user id"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение данных о пользователе по его идентификатору",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;    ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = pm.collectionVariables.get('response');",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Пользователь должен содержать поля: id, surname, name, patronymic, birthdate, email, telNumber\", function () {",
							"pm.expect(target).to.have.property('id');",
							"pm.expect(target).to.have.property('surname');",
							"pm.expect(target).to.have.property('name');",
							"pm.expect(target).to.have.property('patronymic');",
							"pm.expect(target).to.have.property('birthdate');",
							"pm.expect(target).to.have.property('email');",
							"pm.expect(target).to.have.property('telNumber');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/users/:userId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1",
							"description": "user id"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение списка всех пользователей",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;    ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = pm.collectionVariables.get('response');",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Должно быть найдено только два пользователя\", function () {",
							"    pm.expect(target.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/users?from=0&size=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/users/:userId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1",
							"description": "user id"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Авторизация пользователя",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "user",
							"type": "string"
						},
						{
							"key": "username",
							"value": "user",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "user",
							"type": "text"
						},
						{
							"key": "password",
							"value": "user",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение данных о пользователе по его емейлу",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;    ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/email?email=denis@gmail.com",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"email"
					],
					"query": [
						{
							"key": "email",
							"value": "denis@gmail.com"
						}
					]
				}
			},
			"response": []
		}
	]
}